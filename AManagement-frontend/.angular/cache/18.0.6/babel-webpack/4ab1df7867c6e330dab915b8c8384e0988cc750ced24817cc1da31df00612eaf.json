{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { inject } from '@angular/core';\nexport const authGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // Check if the user is logged in\n  if (authService.isLoggedIn()) {\n    return true;\n  } else {\n    router.navigate(['/login']); // Redirect to login page if not authenticated\n    return false; // Or redirect to login\n  }\n};","map":{"version":3,"names":["Router","AuthService","inject","authGuard","route","state","authService","router","isLoggedIn","navigate"],"sources":["C:\\Users\\Auksilyo-01\\Desktop\\AManagement\\AManagement-frontend\\src\\app\\demo\\authentication\\login\\admin.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { inject } from '@angular/core';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n\r\n  // Check if the user is logged in\r\n  if (authService.isLoggedIn()) {\r\n    return true;\r\n  } else {\r\n    router.navigate(['/login']); // Redirect to login page if not authenticated\r\n    return false; // Or redirect to login\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGJ,MAAM,CAACD,WAAW,CAAC;EACvC,MAAMM,MAAM,GAAGL,MAAM,CAACF,MAAM,CAAC;EAG7B;EACA,IAAIM,WAAW,CAACE,UAAU,EAAE,EAAE;IAC5B,OAAO,IAAI;EACb,CAAC,MAAM;IACLD,MAAM,CAACE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B,OAAO,KAAK,CAAC,CAAC;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}